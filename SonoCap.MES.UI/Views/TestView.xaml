<Window x:Class="SonoCap.MES.UI.Views.TestView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:models="clr-namespace:SonoCap.MES.Models.Enums;assembly=Sonocap.MES.Models"
        xmlns:views="clr-namespace:SonoCap.MES.UI.Views"
        xmlns:services="clr-namespace:SonoCap.MES.UI.Services"
        xmlns:behaviors="clr-namespace:SonoCap.MES.UI.Behaviors"
        xmlns:converter="clr-namespace:SonoCap.MES.UI.Converters"
        xmlns:vm="clr-namespace:SonoCap.MES.UI.ViewModels" 
        xmlns:controls="clr-namespace:SonoCap.MES.UI.Controls"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type={x:Type vm:TestViewModel}}"
        Title="{Binding Title}" Height="1080" Width="1920">
    <Window.Resources>
        
    </Window.Resources>
    <!--<Window.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding KeyDownCommand}"/>
    </Window.InputBindings>-->
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="KeyDown">
            <b:InvokeCommandAction Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True">
            </b:InvokeCommandAction>
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <Grid Margin="15">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Column="0" Grid.Row="0" Margin="30,0,15,0" >
            <Label Style="{StaticResource LabelLargeStyle}" HorizontalContentAlignment="Center" Margin="0,0,0,15" >Probe S/N</Label>
            <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock FontSize="20" Text="5M" Margin="10,0,10,5"/>
                <TextBlock FontSize="20" Text="240304" Margin="10,0,10,5"/>
                <TextBlock FontSize="20" Text="01" Margin="10,0,10,5"/>
                <TextBlock FontSize="20" Text="001" Margin="10,0,10,5"/>
            </StackPanel>-->
            <StackPanel>
                <Grid Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Label Style="{StaticResource LabelMediumStyle}" Grid.Row="0" Grid.Column="1" Content="Probe Sn"/>
                    <Label Style="{StaticResource LabelMediumStyle}" Grid.Row="2" Grid.Column="1" Content="TD Md Sn"/>
                    <Label Style="{StaticResource LabelMediumStyle}" Grid.Row="5" Grid.Column="1" Content="TD Sn"/>
                    <Label Style="{StaticResource LabelMediumStyle}" Grid.Row="7" Grid.Column="1" Content="Date"/>
                    <Label Style="{StaticResource LabelMediumStyle}" Grid.Row="11" Grid.Column="1" Content="Seq No"/>
                    <Label Style="{StaticResource LabelMediumStyle}" Grid.Row="13" Grid.Column="1" Content="Motor Lot"/>

                    <controls:TextBoxControl Grid.Row="0" Grid.Column="2" FontSize="20" Validating="{Binding ValidationDict[ProbeSn].IsValid}" Text="{Binding ProbeSn}" IsEnabled="{Binding ProbeSnIsEnabled}" WaterMarkText="{Binding ValidationDict[ProbeSn].WaterMarkText}"/>
                    <TextBlock Grid.Row="1" Grid.Column="2" FontSize="10" Foreground="Tomato" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ValidationDict[ProbeSn].Message}" Visibility="{Binding ProbeSnIsEnabled, Converter={StaticResource EnabledToVisibilityConverter}}"/>

                    <controls:TextBoxControl Grid.Row="2" Grid.Column="2" FontSize="20" Validating="{Binding ValidationDict[TDMdSn].IsValid}" Text="{Binding TDMdSn}" IsEnabled="{Binding TDMdSnIsEnabled}" WaterMarkText="{Binding ValidationDict[TDMdSn].WaterMarkText}"/>
                    <TextBlock Grid.Row="3" Grid.Column="2" FontSize="10" Foreground="Tomato" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ValidationDict[TDMdSn].Message}" Visibility="{Binding TDMdSnIsEnabled, Converter={StaticResource EnabledToVisibilityConverter}}"/>

                    <controls:TextBoxControl Grid.Row="5" Grid.Column="2" FontSize="20" Validating="{Binding ValidationDict[TDSn].IsValid}" Text="{Binding TDSn}" IsEnabled="{Binding TDSnIsEnabled}" WaterMarkText="{Binding ValidationDict[TDSn].WaterMarkText}"/>
                    <TextBlock Grid.Row="6" Grid.Column="2" FontSize="10" Foreground="Tomato" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ValidationDict[TDSn].Message}" Visibility="{Binding TDSnIsEnabled, Converter={StaticResource EnabledToVisibilityConverter}}"/>
                    
                    <DatePicker Margin="0 0 0 10" Grid.Row="7" Grid.Column="2" SelectedDate="{Binding SelectedDate}" FontSize="20">
                        <DatePicker.Resources>
                            <Style TargetType="ToggleButton">
                                <Setter Property="FontSize" Value="20"/>
                            </Style>
                            <Style TargetType="DatePickerTextBox">
                                <Setter Property="FontSize" Value="20"/>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <TextBox IsReadOnly="True" Text="{Binding Path=SelectedDate, StringFormat='yyyy-MM-dd', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>
                    <controls:TextBoxControl Grid.Row="11" Grid.Column="2" FontSize="20" Validating="{Binding ValidationDict[SeqNo].IsValid}" Text="{Binding SeqNo}" IsEnabled="{Binding SeqNoIsEnabled}" WaterMarkText="{Binding ValidationDict[SeqNo].WaterMarkText}"/>
                    <TextBlock Grid.Row="12" Grid.Column="2" FontSize="10" Foreground="Tomato" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ValidationDict[SeqNo].Message}" Visibility="{Binding SeqNoIsEnabled, Converter={StaticResource EnabledToVisibilityConverter}}"/>
                    <controls:TextBoxControl Grid.Row="13" Grid.Column="2" FontSize="20" Validating="{Binding ValidationDict[MTMdSn].IsValid}" Text="{Binding MTMdSn}" IsEnabled="{Binding MTMdSnIsEnabled}" WaterMarkText="{Binding ValidationDict[MTMdSn].WaterMarkText}"/>
                    <TextBlock Grid.Row="14" Grid.Column="2" FontSize="10" Foreground="Tomato" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ValidationDict[MTMdSn].Message}" Visibility="{Binding MTMdSnIsEnabled, Converter={StaticResource EnabledToVisibilityConverter}}"/>
                    <Button Grid.Column="3" Grid.Row="5" FontSize="20" Background="LightBlue" Content="Td 추가" HorizontalAlignment="Stretch" Margin="10,0,10,0" VerticalAlignment="Stretch" Command="{Binding AddTDSnCommand}" CommandParameter="{Binding TDSn}"/>
                    <Button Grid.Column="3" Grid.Row="13" FontSize="20" Background="LightBlue" Content="모터 추가" HorizontalAlignment="Stretch" Margin="10,0,10,0" VerticalAlignment="Stretch" Command="{Binding AddMTMdSnCommand}" CommandParameter="{Binding MTMdSn}"/>
                </Grid>
            </StackPanel>
        </StackPanel>
        <GroupBox Style="{StaticResource GroupBoxLargeStyle}" Grid.Column="0" Grid.Row="2" Grid.RowSpan="1" Margin="30,0,15,0" Header="검사 현황">
            <Grid Grid.Column="0" Grid.Row="2" Grid.RowSpan="1" Margin="10,15,10,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="1.5*"/>
                </Grid.RowDefinitions>

                <Border Grid.Column="0" Grid.Row="0" Background="LightBlue"/>
                <Border Grid.Column="1" Grid.Row="0" Background="LightBlue">
                    <TextBlock Text="Align" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                </Border>
                <Border Grid.Column="2" Grid.Row="0" Background="LightBlue">
                    <TextBlock Text="Axial" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="0"/>
                </Border>
                <Border Grid.Column="3" Grid.Row="0" Background="LightBlue">
                    <TextBlock Text="Leteral" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" Grid.Row="0"/>
                </Border>
                <Border Grid.Column="4" Grid.Row="0" Background="LightBlue">
                    <TextBlock Text="강제 검수" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="4" Grid.Row="0"/>
                </Border>

                <Border Grid.Column="0" Grid.Row="1" Background="LightBlue">
                    <TextBlock Text="공정용" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1"/>
                </Border>
                <Border Grid.Column="1" Grid.Row="1" Background="{Binding BorderBackgrounds[11]}"/>
                <Border Grid.Column="2" Grid.Row="1" Background="{Binding BorderBackgrounds[12]}"/>
                <Border Grid.Column="3" Grid.Row="1" Background="{Binding BorderBackgrounds[13]}"/>
                <Border Grid.Column="4" Grid.Row="1" Background="LightBlue"/>

                <Border Grid.Column="0" Grid.Row="2" Background="LightBlue">
                    <TextBlock Text="최종용" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="2"/>
                </Border>
                <Border Grid.Column="1" Grid.Row="2" Background="{Binding BorderBackgrounds[21]}"/>
                <Border Grid.Column="2" Grid.Row="2" Background="{Binding BorderBackgrounds[22]}"/>
                <Border Grid.Column="3" Grid.Row="2" Background="{Binding BorderBackgrounds[23]}"/>
                <Border Grid.Column="4" Grid.Row="2" Background="LightBlue"/>

                <Border Grid.Column="0" Grid.Row="3" Background="LightBlue">
                    <TextBlock Text="출하용" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="2"/>
                </Border>
                <Border Grid.Column="1" Grid.Row="3" Background="{Binding BorderBackgrounds[31]}"/>
                <Border Grid.Column="2" Grid.Row="3" Background="{Binding BorderBackgrounds[32]}"/>
                <Border Grid.Column="3" Grid.Row="3" Background="{Binding BorderBackgrounds[33]}"/>
                <Border Grid.Column="4" Grid.Row="3" Background="LightBlue"/>
                <!-- 버튼 컨트롤 -->
                <Button Grid.Row="1" Grid.Column="1" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column1}" Background="Transparent" d:IsHidden="True">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="11">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CellDoubleClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column1}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
                <Button Grid.Row="1" Grid.Column="2" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column2}" Background="Transparent" d:IsHidden="True">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="12">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CellDoubleClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column2}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
                <Button Grid.Row="1" Grid.Column="3" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column3}" Background="Transparent" d:IsHidden="True">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="13">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CellDoubleClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column3}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
                <Button Grid.Row="1" Grid.Column="4" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column4}" Background="Transparent" d:IsHidden="True"/>

                <Button Grid.Row="2" Grid.Column="1" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column1}" Background="Transparent" d:IsHidden="True">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="21">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CellDoubleClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column1}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
                <Button Grid.Row="2" Grid.Column="2" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column2}" Background="Transparent" d:IsHidden="True">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="22">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CellDoubleClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column2}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
                <Button Grid.Row="2" Grid.Column="3" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column3}" Background="Transparent" d:IsHidden="True">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="23">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CellDoubleClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column3}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
                <Button Grid.Row="2" Grid.Column="4" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column4}" Background="Transparent" d:IsHidden="True"/>

                <Button Grid.Row="3" Grid.Column="1" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row3_Column1}" Background="Transparent" d:IsHidden="True">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="31">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CellDoubleClickCommand}" CommandParameter="{x:Static models:CellPositions.Row3_Column1}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
                <Button Grid.Row="3" Grid.Column="2" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row3_Column2}" Background="Transparent" d:IsHidden="True">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="32">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CellDoubleClickCommand}" CommandParameter="{x:Static models:CellPositions.Row3_Column2}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
                <Button Grid.Row="3" Grid.Column="3" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row3_Column3}" Background="Transparent" d:IsHidden="True">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="33">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CellDoubleClickCommand}" CommandParameter="{x:Static models:CellPositions.Row3_Column3}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
                <Button Grid.Row="3" Grid.Column="4" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row3_Column4}" Background="Transparent" d:IsHidden="True"/>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Column="1" Grid.Row="0" >
            <Label Style="{StaticResource LabelLargeStyle}"  HorizontalContentAlignment="Center" Margin="0,0,0,15">원 본 이 미 지</Label>
            <Image x:Name="SrcImg" Margin="30,0,30,0" Stretch="Uniform" Source="{Binding SrcImg}"/>
            <!--Source="/Resources/sc_ori_img_512.bmp"/>-->
        </StackPanel>
        
        <GroupBox Style="{StaticResource GroupBoxLargeStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1" Grid.Row="3" Grid.RowSpan="1" Margin="15,0,15,0" Header="검사 기록">
            <ScrollViewer
                HorizontalScrollBarVisibility="Auto"
                VerticalScrollBarVisibility="Auto">
                <ListBox Margin="15" Padding="10" ItemsSource="{Binding ResLogs}" SelectedItem="{Binding SelectedLogItem}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="MouseDoubleClick">
                            <b:InvokeCommandAction Command="{Binding CopyLogCommand}" CommandParameter="{Binding SelectedLogItem}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ListBox>
            </ScrollViewer>
            
            <!--<TextBox Text="1줄.&#x0a;2314154.&#x0a;12213"
                TextWrapping="Wrap"
                AcceptsReturn="True"
                VerticalScrollBarVisibility="Auto"/>-->
            <!--SelectionChanged="TextBox_SelectionChanged"/>-->
        </GroupBox>
        <StackPanel Grid.Column="2" Grid.Row="0" >
            <Label Style="{StaticResource LabelLargeStyle}"  HorizontalContentAlignment="Center" Margin="0,0,0,15">결 과 이 미 지</Label>
            <Image x:Name="ResImg" Margin="30,0,30,0" Stretch="Uniform" Source="{Binding ResImg}"/>
        </StackPanel>
        <Grid Grid.Column="2" Grid.Row="2" Margin="15,0,15,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <GroupBox Style="{StaticResource GroupBoxLargeStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Margin="0" Header="검사 결과">
                <TextBlock Background="Transparent" Margin="10" TextWrapping="Wrap" Name="TestResTb" Text="{Binding ResTxt}"/>
            </GroupBox>
            <GroupBox Header="검사 결과" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" BorderBrush="{Binding TestResult, Converter={StaticResource TestResultBorderBrushConverter}}" Margin="5,5,5,0" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <RadioButton Style="{StaticResource RadioButtonLargeStyle}" GroupName="TestResultTypes" Content="FAIL" Grid.Column="0" IsChecked="{Binding TestResult, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=-1}" HorizontalContentAlignment="Center" Background="Tomato" Margin="10,0,0,0"/>
                    <RadioButton Style="{StaticResource RadioButtonLargeStyle}" GroupName="TestResultTypes" Content="PASS" Grid.Column="1" IsChecked="{Binding TestResult, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=100}" HorizontalContentAlignment="Center" Background="LightGreen" Margin="10,0,0,0"/>
                </Grid>
            </GroupBox>
            <Button Grid.Column="2" Grid.Row="1" FontSize="40" Background="LightBlue" Content="검 사" HorizontalAlignment="Stretch" Margin="0,15,15,0" VerticalAlignment="Stretch" Command="{Binding TestCommand}"/>
            <Button Grid.Column="3" Grid.Row="1" FontSize="40" Background="LightBlue" Content="다 음" HorizontalAlignment="Stretch" Margin="15,15,0,0" VerticalAlignment="Stretch" Command="{Binding NextCommand}"/>
        </Grid>
    </Grid>
</Window>
