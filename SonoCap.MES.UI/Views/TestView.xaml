<Window x:Class="SonoCap.MES.UI.Views.TestView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="clr-namespace:SonoCap.MES.Models.Enums;assembly=Sonocap.MES.Models"
        xmlns:local="clr-namespace:SonoCap.MES.UI.Views"
        xmlns:Converter="clr-namespace:SonoCap.MES.UI.Converters"
        xmlns:vm="clr-namespace:SonoCap.MES.UI.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type={x:Type vm:TestViewModel}}"
        Title="{Binding Title}" Height="1080" Width="1920">
    <Window.Resources>
        <Converter:RadioButtonIndexConverter x:Key="RadioButtonIndexConverter" />
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="40"/>
        </Style>
        <Style TargetType="GroupBox">
            <Setter Property="FontSize" Value="20"/>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,10,0,0" />
        </Style>
        <Style x:Key="BlinkingBorderStyle2" TargetType="Border">
            <Setter Property="Background" Value="LightGreen"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsBlinking}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard RepeatBehavior="Forever">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                    <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Red"/>
                                    <DiscreteColorKeyFrame KeyTime="0:0:0.5" Value="LightGreen"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="BlinkingAnimation"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- 깜빡이는 효과를 위한 스타일 리소스 -->
        <Style x:Key="BlinkingBorderStyle" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="1">
                    <DataTrigger.EnterActions>
                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                        <BeginStoryboard>
                            <Storyboard RepeatBehavior="Forever">
                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="Red" Duration="0:0:0.5" AutoReverse="True"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="LightGreen" Duration="0:0:0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ReadOnlyTextBoxStyle" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="15">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Column="0" Grid.Row="0" Margin="30,0,15,0" >
            <Label HorizontalContentAlignment="Center" Margin="0,0,0,15" >Probe S/N</Label>
            <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock FontSize="20" Text="5M" Margin="10,0,10,5"/>
                <TextBlock FontSize="20" Text="240304" Margin="10,0,10,5"/>
                <TextBlock FontSize="20" Text="01" Margin="10,0,10,5"/>
                <TextBlock FontSize="20" Text="001" Margin="10,0,10,5"/>
            </StackPanel>-->
            <StackPanel>
                <Grid Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Grid.Column="1" Content="Probe Sn" FontSize="20"/>
                    <Label Grid.Row="1" Grid.Column="1" Content="TD Md Sn" FontSize="20"/>
                    <Label Grid.Row="2" Grid.Column="1" Content="TD Type" FontSize="20"/>
                    <Label Grid.Row="3" Grid.Column="1" Content="TD Sn" FontSize="20"/>
                    <Label Grid.Row="4" Grid.Column="1" Content="Date  " FontSize="20"/>
                    <Label Grid.Row="5" Grid.Column="1" Content="PC No" FontSize="20"/>
                    <Label Grid.Row="6" Grid.Column="1" Content="Seq No" FontSize="20"/>
                    <Label Grid.Row="7" Grid.Column="1" Content="MT Md Sn" FontSize="20"/>

                    <TextBox Grid.Row="0" Grid.Column="2" FontSize="20" Text="{Binding ProbeSn}" IsReadOnly="{Binding ProbeSnIsReadOnly}" Style="{StaticResource ReadOnlyTextBoxStyle}"/>
                    <TextBox Grid.Row="1" Grid.Column="2" FontSize="20" Text="{Binding TDMdSn}" IsReadOnly="{Binding TDMdSnIsReadOnly}" Style="{StaticResource ReadOnlyTextBoxStyle}"/>
                    <!--<ComboBox Grid.Row="2" Grid.Column="2" FontSize="20"  SelectedIndex="{Binding TDTypeIndex, Mode=TwoWay}" SelectedItem="{Binding TDType, Mode=TwoWay}">
                        <ComboBoxItem FontSize="20" Content="5M"/>
                        <ComboBoxItem FontSize="20" Content="7.5M"/>
                    </ComboBox>-->
                    <!--<ComboBox Grid.Row="2" Grid.Column="2" FontSize="20" SelectedIndex="{Binding TDTypeIndex, Mode=TwoWay}" SelectedItem="{Binding TDType, Mode=TwoWay}">
                    </ComboBox>-->
                    <ComboBox Grid.Row="2" Grid.Column="2" FontSize="20" ItemsSource="{Binding TDTypes}" SelectedItem="{Binding TDType, Mode=TwoWay}" SelectedIndex="{Binding TDTypeIndex, Mode=TwoWay}"/>
                    
                    <TextBox Grid.Row="3" Grid.Column="2" FontSize="20" Text="{Binding TDSn}"/>
                    <DatePicker Grid.Row="4" Grid.Column="2" SelectedDate="{Binding SelectedDate}" FontSize="20">
                        <DatePicker.Resources>
                            <Style TargetType="ToggleButton">
                                <Setter Property="FontSize" Value="20"/>
                            </Style>
                            <Style TargetType="DatePickerTextBox">
                                <Setter Property="FontSize" Value="20"/>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <TextBox Text="{Binding Path=SelectedDate, StringFormat='yyMMdd', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>
                    <TextBox Grid.Row="5" Grid.Column="2" FontSize="20" Text="{Binding PcNo}"/>
                    <TextBox Grid.Row="6" Grid.Column="2" FontSize="20" Text="{Binding SeqNo}"/>
                    <TextBox Grid.Row="7" Grid.Column="2" FontSize="20" Text="{Binding MTMdSn}" IsReadOnly="{Binding MTMdSnIsReadOnly}" Style="{StaticResource ReadOnlyTextBoxStyle}"/>
                </Grid>
                <GroupBox Margin="0,20,0,10" Header="검사 유형 선택" Padding="0,0,0,10">
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Content="공정용" GroupName="TestCategories" IsChecked="{Binding TestCategoryIndex, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=0}" />
                        <RadioButton Content="최종용" GroupName="TestCategories" IsChecked="{Binding TestCategoryIndex, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=1}" />
                        <!--<RadioButton Content="출하용" GroupName="TestCategories" IsChecked="{Binding TestCategoryIndex, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=2}" />-->
                    </StackPanel>
                </GroupBox>
                <GroupBox Margin="0,0,0,10" Header="검사 모드 선택" Padding="0,0,0,10">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <RadioButton Content="Manual" GroupName="TestModes"  IsChecked="{Binding TestModeIndex, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=0}" />
                        <RadioButton Content="Auto" GroupName="TestModes" IsChecked="{Binding TestModeIndex, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=1}" />
                    </StackPanel>
                </GroupBox>
                <GroupBox Margin="0,0,0,10" Header="검사 방법 선택" Padding="0,0,0,10">
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Content="Align" GroupName="TestTypes" IsChecked="{Binding TestTypeIndex, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=0}"/>
                        <RadioButton Content="Axial" GroupName="TestTypes" IsChecked="{Binding TestTypeIndex, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=1}"/>
                        <RadioButton Content="Lateral" GroupName="TestTypes" IsChecked="{Binding TestTypeIndex, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=2}"/>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </StackPanel>
        <GroupBox Grid.Column="0" Grid.Row="2" Grid.RowSpan="1" Margin="30,0,15,0" Header="검사 현황">
            <Grid Grid.Column="0" Grid.Row="2" Grid.RowSpan="1" Margin="10,15,10,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="1.5*"/>
                    <!--<RowDefinition Height="1*"/>-->
                </Grid.RowDefinitions>

                <Border Grid.Column="0" Grid.Row="0" Background="LightBlue"/>
                <Border Grid.Column="1" Grid.Row="0" Background="LightBlue">
                    <TextBlock Text="Align" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                </Border>
                <Border Grid.Column="2" Grid.Row="0" Background="LightBlue">
                    <TextBlock Text="Axial" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="0"/>
                </Border>
                <Border Grid.Column="3" Grid.Row="0" Background="LightBlue">
                    <TextBlock Text="Leteral" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" Grid.Row="0"/>
                </Border>
                <Border Grid.Column="4" Grid.Row="0" Background="LightBlue">
                    <TextBlock Text="강제 검수" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="4" Grid.Row="0"/>
                </Border>

                <Border Grid.Column="0" Grid.Row="1" Background="LightBlue">
                    <TextBlock Text="공정용" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1"/>
                </Border>
                <Border Grid.Column="1" Grid.Row="1" Background="LightGreen">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="11">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border Grid.Column="2" Grid.Row="1" Background="LightGreen">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="12">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border Grid.Column="3" Grid.Row="1" Background="LightGreen">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="13">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border Grid.Column="4" Grid.Row="1" Background="LightBlue"/>
                
                <Border Grid.Column="0" Grid.Row="2" Background="LightBlue">
                    <TextBlock Text="최종용" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="2"/>
                </Border>
                <Border Grid.Column="1" Grid.Row="2" Background="LightGreen">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="21">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border Grid.Column="2" Grid.Row="2" Background="LightBlue">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="22">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border Grid.Column="3" Grid.Row="2" Background="Tomato">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BlinkingCellIndex}" Value="23">
                                    <DataTrigger.EnterActions>
                                        <!-- 셀이 깜빡일 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Yellow" Duration="0:0:0.5" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <!-- 깜빡임이 멈출 때의 애니메이션 효과를 구현합니다. -->
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border Grid.Column="4" Grid.Row="2" Background="LightBlue"/>

                <!-- 버튼 컨트롤 -->
                <Button Grid.Row="1" Grid.Column="1" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column1}" Background="Transparent"/>
                <Button Grid.Row="1" Grid.Column="2" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column2}" Background="Transparent"/>
                <Button Grid.Row="1" Grid.Column="3" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column3}" Background="Transparent"/>
                <Button Grid.Row="1" Grid.Column="4" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row1_Column4}" Background="Transparent"/>
                <Button Grid.Row="2" Grid.Column="1" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column1}" Background="Transparent"/>
                <Button Grid.Row="2" Grid.Column="2" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column2}" Background="Transparent"/>
                <Button Grid.Row="2" Grid.Column="3" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column3}" Background="Transparent"/>
                <Button Grid.Row="2" Grid.Column="4" Width="auto" Height="auto" Command="{Binding CellClickCommand}" CommandParameter="{x:Static models:CellPositions.Row2_Column4}" Background="Transparent"/>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Column="1" Grid.Row="0" >
            <Label HorizontalContentAlignment="Center" Margin="0,0,0,15">원 본 이 미 지</Label>
            <Image x:Name="SrcImg" Margin="30,0,30,0" Stretch="Uniform" Source="{Binding SrcImg}"/>
            <!--Source="/Resources/sc_ori_img_512.bmp"/>-->
        </StackPanel>
        <GroupBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1" Grid.Row="3" Grid.RowSpan="1" Margin="15,0,15,0" Header="검사 기록">
            <ListBox Margin="15" Padding="10" ItemsSource="{Binding ResLogs}"/>
            <!--<TextBox Text="1줄.&#x0a;2314154.&#x0a;12213"
                TextWrapping="Wrap"
                AcceptsReturn="True"
                VerticalScrollBarVisibility="Auto"/>-->
            <!--SelectionChanged="TextBox_SelectionChanged"/>-->
        </GroupBox>
        <StackPanel Grid.Column="2" Grid.Row="0" >
            <Label HorizontalContentAlignment="Center" Margin="0,0,0,15">결 과 이 미 지</Label>
            <Image x:Name="ResImg" Margin="30,0,30,0" Stretch="Uniform" Source="{Binding ResImg}"/>
        </StackPanel>
        <Grid Grid.Column="2" Grid.Row="2" Margin="15,0,15,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <GroupBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Margin="0" Header="검사 결과">
                <ScrollViewer
                    HorizontalScrollBarVisibility="Auto"
                    VerticalScrollBarVisibility="Auto">
                    <TextBlock Background="Transparent" Margin="10" TextWrapping="Wrap" Name="TestResTb" Text="{Binding ResTxt}"/>
                </ScrollViewer>
            </GroupBox>
            <RadioButton Grid.Column="0" Grid.Row="1" GroupName="TestResultTypes" Content="FAIL" IsChecked="{Binding TestResultTypeIndex, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=0}" HorizontalContentAlignment="Center" Background="Tomato"/>
            <RadioButton Grid.Column="1" Grid.Row="1" GroupName="TestResultTypes" Content="PASS" IsChecked="{Binding TestResultTypeIndex, Mode=TwoWay, Converter={StaticResource RadioButtonIndexConverter}, ConverterParameter=1}" HorizontalContentAlignment="Center" Background="LightGreen"/>
            <Button Grid.Column="2" Grid.Row="1" FontSize="40" Background="LightBlue" Content="검 사" HorizontalAlignment="Stretch" Margin="0,15,15,0" VerticalAlignment="Stretch" Command="{Binding TestCommand}"/>
            <Button Grid.Column="3" Grid.Row="1" FontSize="40" Background="LightBlue" Content="다 음" HorizontalAlignment="Stretch" Margin="15,15,0,0" VerticalAlignment="Stretch"/>
        </Grid>
    </Grid>
</Window>
